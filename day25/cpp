#include <iostream>
#include <vector>
using namespace std;

// Function to check if the matrix meets the conditions
bool checkMagicMatrix(const vector<vector<int>>& matrix, int m, int n) {
    // Matrix must be square
    if (m != n) {
        return false;
    }

    // Check that diagonal elements are non-zero
    for (int i = 0; i < m; ++i) {
        if (matrix[i][i] == 0) {  // If any diagonal element is zero, return false
            return false;
        }
    }

    // Non-diagonal elements can be any value, no further checks required for them

    return true;
}

int main() {
    int T;  // Number of test cases
    cin >> T;

    while (T--) {
        int m, n;
        cin >> m >> n;  // Matrix dimensions

        // If the matrix dimensions are invalid (not square), return false
        if (m != n) {
            cout << "false" << endl;
            continue;
        }

        vector<vector<int>> matrix(m, vector<int>(n));

        // Read in the matrix elements
        for (int i = 0; i < m; ++i) {
            for (int j = 0; j < n; ++j) {
                cin >> matrix[i][j];
            }
        }

        // Check if the matrix satisfies the "magic" conditions
        if (checkMagicMatrix(matrix, m, n)) {
            cout << "true" << endl;
        } 
        else {
            cout << "false" << endl;
        }
    }

    return 0;
}